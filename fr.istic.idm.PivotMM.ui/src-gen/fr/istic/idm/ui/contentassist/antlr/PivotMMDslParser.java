/*
* generated by Xtext
*/
package fr.istic.idm.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import fr.istic.idm.services.PivotMMDslGrammarAccess;

public class PivotMMDslParser extends AbstractContentAssistParser {
	
	@Inject
	private PivotMMDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected fr.istic.idm.ui.contentassist.antlr.internal.InternalPivotMMDslParser createParser() {
		fr.istic.idm.ui.contentassist.antlr.internal.InternalPivotMMDslParser result = new fr.istic.idm.ui.contentassist.antlr.internal.InternalPivotMMDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getWidgetAccess().getAlternatives(), "rule__Widget__Alternatives");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getPollSystemAccess().getGroup(), "rule__PollSystem__Group__0");
					put(grammarAccess.getPollSystemAccess().getGroup_3(), "rule__PollSystem__Group_3__0");
					put(grammarAccess.getPollSystemAccess().getGroup_4(), "rule__PollSystem__Group_4__0");
					put(grammarAccess.getPollSystemAccess().getGroup_4_3(), "rule__PollSystem__Group_4_3__0");
					put(grammarAccess.getUiModelAccess().getGroup(), "rule__UiModel__Group__0");
					put(grammarAccess.getUiModelAccess().getGroup_3(), "rule__UiModel__Group_3__0");
					put(grammarAccess.getUiModelAccess().getGroup_4(), "rule__UiModel__Group_4__0");
					put(grammarAccess.getUiModelAccess().getGroup_5(), "rule__UiModel__Group_5__0");
					put(grammarAccess.getUiModelAccess().getGroup_5_3(), "rule__UiModel__Group_5_3__0");
					put(grammarAccess.getCheckBoxAccess().getGroup(), "rule__CheckBox__Group__0");
					put(grammarAccess.getCheckBoxAccess().getGroup_3(), "rule__CheckBox__Group_3__0");
					put(grammarAccess.getRadioButtonAccess().getGroup(), "rule__RadioButton__Group__0");
					put(grammarAccess.getRadioButtonAccess().getGroup_3(), "rule__RadioButton__Group_3__0");
					put(grammarAccess.getTextFieldAccess().getGroup(), "rule__TextField__Group__0");
					put(grammarAccess.getTextFieldAccess().getGroup_3(), "rule__TextField__Group_3__0");
					put(grammarAccess.getComboBoxAccess().getGroup(), "rule__ComboBox__Group__0");
					put(grammarAccess.getComboBoxAccess().getGroup_3(), "rule__ComboBox__Group_3__0");
					put(grammarAccess.getPollSystemAccess().getTitleAssignment_3_1(), "rule__PollSystem__TitleAssignment_3_1");
					put(grammarAccess.getPollSystemAccess().getModelsAssignment_4_2(), "rule__PollSystem__ModelsAssignment_4_2");
					put(grammarAccess.getPollSystemAccess().getModelsAssignment_4_3_1(), "rule__PollSystem__ModelsAssignment_4_3_1");
					put(grammarAccess.getUiModelAccess().getIdAssignment_3_1(), "rule__UiModel__IdAssignment_3_1");
					put(grammarAccess.getUiModelAccess().getLaQuestionAssignment_4_1(), "rule__UiModel__LaQuestionAssignment_4_1");
					put(grammarAccess.getUiModelAccess().getWidgetsAssignment_5_2(), "rule__UiModel__WidgetsAssignment_5_2");
					put(grammarAccess.getUiModelAccess().getWidgetsAssignment_5_3_1(), "rule__UiModel__WidgetsAssignment_5_3_1");
					put(grammarAccess.getCheckBoxAccess().getValueAssignment_3_1(), "rule__CheckBox__ValueAssignment_3_1");
					put(grammarAccess.getRadioButtonAccess().getValueAssignment_3_1(), "rule__RadioButton__ValueAssignment_3_1");
					put(grammarAccess.getTextFieldAccess().getValueAssignment_3_1(), "rule__TextField__ValueAssignment_3_1");
					put(grammarAccess.getComboBoxAccess().getValueAssignment_3_1(), "rule__ComboBox__ValueAssignment_3_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			fr.istic.idm.ui.contentassist.antlr.internal.InternalPivotMMDslParser typedParser = (fr.istic.idm.ui.contentassist.antlr.internal.InternalPivotMMDslParser) parser;
			typedParser.entryRulePollSystem();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public PivotMMDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(PivotMMDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
