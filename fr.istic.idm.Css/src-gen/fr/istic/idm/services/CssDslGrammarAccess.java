/*
* generated by Xtext
*/
package fr.istic.idm.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class CssDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class CssElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Css");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCssKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCssAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCssWidgetParserRuleCall_2_0 = (RuleCall)cCssAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Css:
		//	"Css " "{" css+=Widget+ "}";
		public ParserRule getRule() { return rule; }

		//"Css " "{" css+=Widget+ "}"
		public Group getGroup() { return cGroup; }

		//"Css "
		public Keyword getCssKeyword_0() { return cCssKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//css+=Widget+
		public Assignment getCssAssignment_2() { return cCssAssignment_2; }

		//Widget
		public RuleCall getCssWidgetParserRuleCall_2_0() { return cCssWidgetParserRuleCall_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class WidgetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Widget");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIdAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cIdIDTerminalRuleCall_0_0 = (RuleCall)cIdAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cValueAlternatives_2_0 = (Alternatives)cValueAssignment_2.eContents().get(0);
		private final Keyword cValueCheckBoxKeyword_2_0_0 = (Keyword)cValueAlternatives_2_0.eContents().get(0);
		private final Keyword cValueComboBoxKeyword_2_0_1 = (Keyword)cValueAlternatives_2_0.eContents().get(1);
		private final Keyword cValueTextFieldKeyword_2_0_2 = (Keyword)cValueAlternatives_2_0.eContents().get(2);
		private final Keyword cValueRadioButtonKeyword_2_0_3 = (Keyword)cValueAlternatives_2_0.eContents().get(3);
		
		//Widget:
		//	id=ID "=>" value=("CheckBox" | "ComboBox" | "TextField" | "RadioButton");
		public ParserRule getRule() { return rule; }

		//id=ID "=>" value=("CheckBox" | "ComboBox" | "TextField" | "RadioButton")
		public Group getGroup() { return cGroup; }

		//id=ID
		public Assignment getIdAssignment_0() { return cIdAssignment_0; }

		//ID
		public RuleCall getIdIDTerminalRuleCall_0_0() { return cIdIDTerminalRuleCall_0_0; }

		//"=>"
		public Keyword getEqualsSignGreaterThanSignKeyword_1() { return cEqualsSignGreaterThanSignKeyword_1; }

		//value=("CheckBox" | "ComboBox" | "TextField" | "RadioButton")
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//"CheckBox" | "ComboBox" | "TextField" | "RadioButton"
		public Alternatives getValueAlternatives_2_0() { return cValueAlternatives_2_0; }

		//"CheckBox"
		public Keyword getValueCheckBoxKeyword_2_0_0() { return cValueCheckBoxKeyword_2_0_0; }

		//"ComboBox"
		public Keyword getValueComboBoxKeyword_2_0_1() { return cValueComboBoxKeyword_2_0_1; }

		//"TextField"
		public Keyword getValueTextFieldKeyword_2_0_2() { return cValueTextFieldKeyword_2_0_2; }

		//"RadioButton"
		public Keyword getValueRadioButtonKeyword_2_0_3() { return cValueRadioButtonKeyword_2_0_3; }
	}
	
	
	private CssElements pCss;
	private WidgetElements pWidget;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public CssDslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("fr.istic.idm.CssDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Css:
	//	"Css " "{" css+=Widget+ "}";
	public CssElements getCssAccess() {
		return (pCss != null) ? pCss : (pCss = new CssElements());
	}
	
	public ParserRule getCssRule() {
		return getCssAccess().getRule();
	}

	//Widget:
	//	id=ID "=>" value=("CheckBox" | "ComboBox" | "TextField" | "RadioButton");
	public WidgetElements getWidgetAccess() {
		return (pWidget != null) ? pWidget : (pWidget = new WidgetElements());
	}
	
	public ParserRule getWidgetRule() {
		return getWidgetAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
