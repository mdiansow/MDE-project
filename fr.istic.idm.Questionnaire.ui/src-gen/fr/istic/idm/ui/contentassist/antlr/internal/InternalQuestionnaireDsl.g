/*
* generated by Xtext
*/
grammar InternalQuestionnaireDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package fr.istic.idm.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.istic.idm.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import fr.istic.idm.services.QuestionnaireDslGrammarAccess;

}

@parser::members {
 
 	private QuestionnaireDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(QuestionnaireDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleSondage
entryRuleSondage 
:
{ before(grammarAccess.getSondageRule()); }
	 ruleSondage
{ after(grammarAccess.getSondageRule()); } 
	 EOF 
;

// Rule Sondage
ruleSondage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSondageAccess().getGroup()); }
(rule__Sondage__Group__0)
{ after(grammarAccess.getSondageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQuestionnaire
entryRuleQuestionnaire 
:
{ before(grammarAccess.getQuestionnaireRule()); }
	 ruleQuestionnaire
{ after(grammarAccess.getQuestionnaireRule()); } 
	 EOF 
;

// Rule Questionnaire
ruleQuestionnaire
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQuestionnaireAccess().getGroup()); }
(rule__Questionnaire__Group__0)
{ after(grammarAccess.getQuestionnaireAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQuestion
entryRuleQuestion 
:
{ before(grammarAccess.getQuestionRule()); }
	 ruleQuestion
{ after(grammarAccess.getQuestionRule()); } 
	 EOF 
;

// Rule Question
ruleQuestion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQuestionAccess().getGroup()); }
(rule__Question__Group__0)
{ after(grammarAccess.getQuestionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOption
entryRuleOption 
:
{ before(grammarAccess.getOptionRule()); }
	 ruleOption
{ after(grammarAccess.getOptionRule()); } 
	 EOF 
;

// Rule Option
ruleOption
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOptionAccess().getGroup()); }
(rule__Option__Group__0)
{ after(grammarAccess.getOptionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sondage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sondage__Group__0__Impl
	rule__Sondage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sondage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSondageAccess().getSondageKeyword_0()); }

	'Sondage ' 

{ after(grammarAccess.getSondageAccess().getSondageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sondage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sondage__Group__1__Impl
	rule__Sondage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sondage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSondageAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getSondageAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sondage__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sondage__Group__2__Impl
	rule__Sondage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sondage__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSondageAccess().getSondageAssignment_2()); }
(rule__Sondage__SondageAssignment_2)
{ after(grammarAccess.getSondageAccess().getSondageAssignment_2()); }
)
(
{ before(grammarAccess.getSondageAccess().getSondageAssignment_2()); }
(rule__Sondage__SondageAssignment_2)*
{ after(grammarAccess.getSondageAccess().getSondageAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sondage__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sondage__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sondage__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSondageAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getSondageAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Questionnaire__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group__0__Impl
	rule__Questionnaire__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getQuestionnaireKeyword_0()); }

	'Questionnaire ' 

{ after(grammarAccess.getQuestionnaireAccess().getQuestionnaireKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Questionnaire__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group__1__Impl
	rule__Questionnaire__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getNameAssignment_1()); }
(rule__Questionnaire__NameAssignment_1)
{ after(grammarAccess.getQuestionnaireAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Questionnaire__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group__2__Impl
	rule__Questionnaire__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getQuestionnaireAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Questionnaire__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group__3__Impl
	rule__Questionnaire__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getQuestionnaireAssignment_3()); }
(rule__Questionnaire__QuestionnaireAssignment_3)*
{ after(grammarAccess.getQuestionnaireAccess().getQuestionnaireAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Questionnaire__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getQuestionnaireAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Question__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__0__Impl
	rule__Question__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getQuestionKeyword_0()); }

	'Question ' 

{ after(grammarAccess.getQuestionAccess().getQuestionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__1__Impl
	rule__Question__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getNameAssignment_1()); }
(rule__Question__NameAssignment_1)
{ after(grammarAccess.getQuestionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__2__Impl
	rule__Question__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getQuestionAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__3__Impl
	rule__Question__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getTextAssignment_3()); }
(rule__Question__TextAssignment_3)
{ after(grammarAccess.getQuestionAccess().getTextAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__4__Impl
	rule__Question__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getQuestionAssignment_4()); }
(rule__Question__QuestionAssignment_4)
{ after(grammarAccess.getQuestionAccess().getQuestionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getQuestionAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Option__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Option__Group__0__Impl
	rule__Option__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionAccess().getOptionsKeyword_0()); }

	'Options' 

{ after(grammarAccess.getOptionAccess().getOptionsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Option__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Option__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getOptionAccess().getGroup_1()); }
(rule__Option__Group_1__0)
{ after(grammarAccess.getOptionAccess().getGroup_1()); }
)
(
{ before(grammarAccess.getOptionAccess().getGroup_1()); }
(rule__Option__Group_1__0)*
{ after(grammarAccess.getOptionAccess().getGroup_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Option__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Option__Group_1__0__Impl
	rule__Option__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionAccess().getIDTerminalRuleCall_1_0()); }
	RULE_ID
{ after(grammarAccess.getOptionAccess().getIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Option__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Option__Group_1__1__Impl
	rule__Option__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionAccess().getColonKeyword_1_1()); }

	':' 

{ after(grammarAccess.getOptionAccess().getColonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Option__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Option__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionAccess().getTextAssignment_1_2()); }
(rule__Option__TextAssignment_1_2)
{ after(grammarAccess.getOptionAccess().getTextAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Sondage__SondageAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSondageAccess().getSondageQuestionnaireParserRuleCall_2_0()); }
	ruleQuestionnaire{ after(grammarAccess.getSondageAccess().getSondageQuestionnaireParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getQuestionnaireAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__QuestionnaireAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getQuestionnaireQuestionParserRuleCall_3_0()); }
	ruleQuestion{ after(grammarAccess.getQuestionnaireAccess().getQuestionnaireQuestionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Question__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getQuestionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Question__TextAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getTextSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getQuestionAccess().getTextSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Question__QuestionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getQuestionOptionParserRuleCall_4_0()); }
	ruleOption{ after(grammarAccess.getQuestionAccess().getQuestionOptionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Option__TextAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionAccess().getTextSTRINGTerminalRuleCall_1_2_0()); }
	RULE_STRING{ after(grammarAccess.getOptionAccess().getTextSTRINGTerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


